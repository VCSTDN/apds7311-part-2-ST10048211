name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your main branch name if different
  pull_request:
    branches:
      - main  # Run for PRs targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Change to your preferred Node.js version

      - name: Install dependencies
        run: |
          cd frontend  # Change to your frontend directory
          npm install  # or yarn install if you're using Yarn

      - name: Run tests
        run: |
          cd frontend  # Change to your frontend directory
          npm test  # or yarn test if you're using Yarn

      - name: Build the application
        run: |
          cd frontend  # Change to your frontend directory
          npm run build  # Adjust based on your build command

  deploy:
    runs-on: ubuntu-latest
    needs: build  # This job will wait for the build job to complete

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Deploy to Production
        run: |
          echo "Deploying application..."
          
          # Install production dependencies
          echo "Installing production dependencies..."
          cd frontend  # Change to your frontend directory
          npm install --production  # or yarn install --production if using Yarn

          # Example deployment commands (customize as needed)
          echo "Starting deployment process..."
          scp -r ./frontend/build user@yourserver.com:/path/to/deploy  # For example, using SCP to copy files
          ssh user@yourserver.com 'cd /path/to/deploy && npm install --production'  # SSH into the server to install production dependencies

          # Restart the application
          echo "Restarting the application..."
          ssh user@yourserver.com 'pm2 restart your-app-name'  # Using PM2 to manage application processes

          echo "Deployment completed successfully."
